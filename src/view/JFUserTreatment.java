/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import object.InPatient;
import object.InTreatment;

/**
 *
 * @author dhadotid
 */
public class JFUserTreatment extends javax.swing.JFrame {
    InTreatment inTreatment;
    InPatient inPatient;
    DefaultTableModel tableModel;
    /**
     * Creates new form JFUserTreatment
     */
    public JFUserTreatment() {
        super("Treatment");
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        setResizable(false);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        
        try
        {
         Registry myRegistry = LocateRegistry.getRegistry("127.0.0.1",1097);
         inTreatment = (InTreatment) myRegistry.lookup("objtreatment");
         inPatient = (InPatient)myRegistry.lookup("objpatient");
        } 
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null,"Error 1 :"+ e);
        }
        
        txtIdDoctor.setEnabled(false);
        txtIdPatient.setEnabled(false);
        txtIdRecipe.setEnabled(false);
        txtIdTreatment.setEnabled(false);
        autoid();
        autoidrecipe();
        tableload();
        tabledoctor();
        txtDiagnose.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtIdTreatment = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtIdPatient = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtIdDoctor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtIdRecipe = new javax.swing.JTextField();
        txtDiagnose = new javax.swing.JTextField();
        btnInsert = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtSearchPatient = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPatient = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        btnSearchDoc = new javax.swing.JButton();
        txtSearchDoc = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbDoc = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Fax", 0, 24)); // NOI18N
        jLabel1.setText("Treatment");

        jLabel2.setFont(new java.awt.Font("Lucida Fax", 0, 18)); // NOI18N
        jLabel2.setText("Id Treatment");

        txtIdTreatment.setFont(new java.awt.Font("Lucida Fax", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Lucida Fax", 0, 18)); // NOI18N
        jLabel3.setText("Id Patient");

        txtIdPatient.setFont(new java.awt.Font("Lucida Fax", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Lucida Fax", 0, 18)); // NOI18N
        jLabel4.setText("Id Doctor");

        txtIdDoctor.setFont(new java.awt.Font("Lucida Fax", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Lucida Fax", 0, 18)); // NOI18N
        jLabel5.setText("Id Recipe");

        jLabel6.setFont(new java.awt.Font("Lucida Fax", 0, 18)); // NOI18N
        jLabel6.setText("Diagnose");

        txtIdRecipe.setFont(new java.awt.Font("Lucida Fax", 0, 18)); // NOI18N

        txtDiagnose.setFont(new java.awt.Font("Lucida Fax", 0, 18)); // NOI18N

        btnInsert.setFont(new java.awt.Font("Lucida Fax", 0, 18)); // NOI18N
        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Lucida Fax", 0, 18)); // NOI18N
        jLabel7.setText("Search Patient");

        txtSearchPatient.setFont(new java.awt.Font("Lucida Fax", 0, 18)); // NOI18N

        btnSearch.setFont(new java.awt.Font("Lucida Fax", 0, 18)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        tbPatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id Patient", "Patient Name", "DateOfBirth", "Address", "Gender"
            }
        ));
        tbPatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPatientMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbPatient);

        jLabel8.setFont(new java.awt.Font("Lucida Fax", 0, 18)); // NOI18N
        jLabel8.setText("Search Doctor");

        btnSearchDoc.setFont(new java.awt.Font("Lucida Fax", 0, 18)); // NOI18N
        btnSearchDoc.setText("Search");
        btnSearchDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchDocActionPerformed(evt);
            }
        });

        txtSearchDoc.setFont(new java.awt.Font("Lucida Fax", 0, 18)); // NOI18N

        tbDoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id Doctor", "DoctorName", "Specialist", "PhoneNumber"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbDoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDocMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbDoc);
        if (tbDoc.getColumnModel().getColumnCount() > 0) {
            tbDoc.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(btnInsert))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtIdTreatment, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                                    .addComponent(txtIdPatient)
                                    .addComponent(txtIdDoctor)
                                    .addComponent(txtIdRecipe)
                                    .addComponent(txtDiagnose))))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(txtSearchPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnSearch))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(txtSearchDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnSearchDoc))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jScrollPane2)))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtSearchPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtIdTreatment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtIdPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtIdDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtIdRecipe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtDiagnose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnInsert))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtSearchDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(btnSearchDoc)))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchDocActionPerformed
        tableModel = (DefaultTableModel)tbDoc.getModel();
        tableModel.setRowCount(0);
        try{
            ArrayList data = inTreatment.getRecordDoctor(txtSearchDoc.getText());
            for(int i = 0;i < data.size()-1;i+=4)
            {
                String idDoctor = (String)data.get(i);
                String DoctorName = (String)data.get(i+1);
                String DoctorSpecialist = (String)data.get(i+2);
                String DoctorGender = (String)data.get(i+3);

                String[] data_field = {idDoctor.trim(), DoctorName.trim(),DoctorSpecialist.trim(), DoctorGender.trim()};
                tableModel.addRow(data_field);
            }
        } catch (Exception ex) {
            System.out.println("Error: " + ex);
        }
    }//GEN-LAST:event_btnSearchDocActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        tableModel = (DefaultTableModel)tbPatient.getModel();
        tableModel.setRowCount(0);
        String[] columnNames = {"Id Patient", "Patient Name", "DOB", "Address", "Gender"};
        for(int i = 0; i < tbPatient.getColumnCount(); i++){
            TableColumn column1 = tbPatient.getTableHeader().getColumnModel().getColumn(i);
            column1.setHeaderValue(columnNames[i]);
        }
        try{
            ArrayList data = inPatient.getRecord(txtSearchPatient.getText());
            for(int i = 0;i < data.size()-1;i+=5)
            {
                //fac_code, fac_name, fac_email, fac_phone
                String idPatient = (String)data.get(i);
                String patientName = (String)data.get(i+1);
                String DOB = (String)data.get(i+2);
                String patientAddress = (String)data.get(i+3);
                String patientGender = (String)data.get(i+4);
                
                String[] data_field = {idPatient.trim(), patientName.trim(),DOB.trim(), patientAddress.trim(), patientGender.trim()};
                tableModel.addRow(data_field);
            }
        }
        catch(Exception ex) {
            JOptionPane.showMessageDialog(null, "Data Gagal Ditampilkan" + ex.getMessage());
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        //Insert
        if(txtIdDoctor.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Please select Id Doctor from the table doctor");
        }else if(txtIdPatient.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Please select Id Patient from the table doctor");
        }else if(txtDiagnose.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Please enter diagnose");
        }else if(txtIdRecipe.getText().equals("full")){
            JOptionPane.showMessageDialog(null, "Data has been full");
        }else if(txtIdTreatment.getText().equals("full")){
            JOptionPane.showMessageDialog(null, "Data has been full");
        }else{
            //Insert
            try {
                inTreatment.setPatientID(txtIdPatient.getText());
                inTreatment.setDoctorID(txtIdDoctor.getText());
                inTreatment.setDiagnose(txtDiagnose.getText());
                int i = inTreatment.doInsert();
                if(i != 0){
                    JOptionPane.showMessageDialog(null, "Data Treatment successful inputted");
                        
                    autoid();
                    autoidrecipe();
                    clear();
                    tableload();
                    tabledoctor();
                }else{
                    JOptionPane.showMessageDialog(null, "Data Treatment failed inputted");
                }
            } catch (Exception e) {
                System.out.println("Error: " + e);
            }
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void tbPatientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPatientMouseClicked
        //Mouse Click Patient
        DefaultTableModel model = (DefaultTableModel)tbPatient.getModel();
        int selectedRowIndex = tbPatient.getSelectedRow();
        
        txtIdPatient.setText(model.getValueAt(selectedRowIndex, 0).toString());
    }//GEN-LAST:event_tbPatientMouseClicked

    private void tbDocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDocMouseClicked
        //Mouse Click Doctor
        DefaultTableModel model = (DefaultTableModel)tbDoc.getModel();
        int selectedRowIndex = tbDoc.getSelectedRow();
        
        txtIdDoctor.setText(model.getValueAt(selectedRowIndex, 0).toString());
    }//GEN-LAST:event_tbDocMouseClicked

    public void clear(){
        txtDiagnose.setText("");
        txtIdDoctor.setText(null);
        txtIdPatient.setText(null);
        txtSearchDoc.setText(null);
        txtSearchPatient.setText(null);
        autoid();
        autoidrecipe();
    }
    
    public void tabledoctor(){
        tableModel = (DefaultTableModel)tbDoc.getModel();
        tableModel.setRowCount(0);
        try{
            ArrayList data = inTreatment.tableDoctor();
            for(int i = 0;i < data.size()-1;i+=4)
            {
                String idDoctor = (String)data.get(i);
                String DoctorName = (String)data.get(i+1);
                String DoctorSpecialist = (String)data.get(i+2);
                String DoctorGender = (String)data.get(i+3);

                String[] data_field = {idDoctor.trim(), DoctorName.trim(),DoctorSpecialist.trim(), DoctorGender.trim()};
                tableModel.addRow(data_field);
            }
        } catch (Exception ex) {
            System.out.println("Error: " + ex);
        }
    }
    
    public void autoid(){
        try {
            txtIdTreatment.setText(inTreatment.autoid());
            System.out.println("Test: " + inTreatment.autoid());
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
    }
    
    public void autoidrecipe(){
        try {
            txtIdRecipe.setText(inTreatment.autoidRecipe());
            System.out.println("Test: " + inTreatment.autoidRecipe());
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
    }
    
    public void tableload(){
        tableModel = (DefaultTableModel)tbPatient.getModel();
        tableModel.setRowCount(0);
        String[] columnNames = {"Id Patient", "Patient Name", "DOB", "Address", "Gender"};
        for(int i = 0; i < tbPatient.getColumnCount(); i++){
            TableColumn column1 = tbPatient.getTableHeader().getColumnModel().getColumn(i);
            column1.setHeaderValue(columnNames[i]);
        }
        try{
            ArrayList data = inTreatment.tablePatient();
            for(int i = 0;i < data.size()-1;i+=5)
            {
                //fac_code, fac_name, fac_email, fac_phone
                String idPatient = (String)data.get(i);
                String patientName = (String)data.get(i+1);
                String DOB = (String)data.get(i+2);
                String patientAddress = (String)data.get(i+3);
                String patientGender = (String)data.get(i+4);
                
                String[] data_field = {idPatient.trim(), patientName.trim(),DOB.trim(), patientAddress.trim(), patientGender.trim()};
                tableModel.addRow(data_field);
            }
        } catch (Exception ex) {
            System.out.println("Error: " + ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearchDoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbDoc;
    private javax.swing.JTable tbPatient;
    private javax.swing.JTextField txtDiagnose;
    private javax.swing.JTextField txtIdDoctor;
    private javax.swing.JTextField txtIdPatient;
    private javax.swing.JTextField txtIdRecipe;
    private javax.swing.JTextField txtIdTreatment;
    private javax.swing.JTextField txtSearchDoc;
    private javax.swing.JTextField txtSearchPatient;
    // End of variables declaration//GEN-END:variables
}
